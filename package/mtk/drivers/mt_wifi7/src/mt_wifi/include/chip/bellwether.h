#ifndef __BELLWETHER_H__
#define __BELLWETHER_H__

struct _RTMP_ADAPTER;
struct _RTMP_CHIP_DBG;

#define BELLWETHER_BIN_FILE_NAME_E1 "WIFI_RAM_CODE_bellwether.bin"
#define BELLWETHER_BIN_FILE_NAME_E2 "WIFI_RAM_CODE_bellwether.bin"
#define BELLWETHER_WA_BIN_FILE_NAME "bellwether_WACPU_RAM_CODE_release.bin"
#define BELLWETHER_ROM_PATCH_BIN_FILE_NAME_E1 "bellwether_patch_e1_hdr.bin"
#define BELLWETHER_ROM_PATCH_BIN_FILE_NAME_E2 "bellwether_patch_e2_hdr.bin"

#define BELLWETHER_ROM_PATCH_START_ADDRESS	0x00200000

#ifdef MOBILE_FW_SUPPORT
#define BELLWETHER_MT_WTBL_SIZE         32
#else /* MOBILE_FW_SUPPORT */
#define BELLWETHER_MT_WTBL_SIZE         288
#endif /* !MOBILE_FW_SUPPORT */

#define CFG_STA_REC_NUM                 BELLWETHER_MT_WTBL_SIZE
#define MAX_LEN_OF_MAC_TABLE       BELLWETHER_MT_WTBL_SIZE

#define MAX_INBAND_WTBL_NUM         90


#define WTBL_MASK_UPDATE_MAX_RETRY	64000

#define EEPROM_BAND0_MAC0	0x04
#define EEPROM_BAND0_MAC1	0x06
#define EEPROM_BAND0_MAC2	0x08

#define EEPROM_BAND1_MAC0	0x04
#define EEPROM_BAND1_MAC1	0x06
#define EEPROM_BAND1_MAC2	0x08

#define EEPROM_BAND2_MAC0	0x04
#define EEPROM_BAND2_MAC1	0x06
#define EEPROM_BAND2_MAC2	0x08

#ifdef ADIE_MT7977
#define EEPROM_ANTENNA_CFG_OFFSET           0x190
#define BAND_SELECT_MASK_B0					BITS(0, 2)
#define BAND_SELECT_OFFSET_B0               0
#define BAND_SELECT_MASK_B1					BITS(3, 5)
#define BAND_SELECT_OFFSET_B1               3

#define EEPROM_ANTENNA_CFG_OFFSET_1         0x191
#define BAND_SELECT_MASK_B2					BITS(0, 2)
#define BAND_SELECT_OFFSET_B2               0
#define TX_MASK_B0							BITS(3, 5)
#define TX_OFFSET_B0						3

#define EEPROM_ANTENNA_CFG_OFFSET_2         0x192
#define TX_MASK_B1							BITS(0, 2)
#define TX_OFFSET_B1						0
#define TX_MASK_B2							BITS(3, 5)
#define TX_OFFSET_B2						3

#define EEPROM_ANTENNA_CFG_OFFSET_3         0x193
#define RX_MASK_B0							BITS(0, 2)
#define RX_OFFSET_B0						0
#define RX_MASK_B1							BITS(3, 5)
#define RX_OFFSET_B1						3

#define EEPROM_ANTENNA_CFG_OFFSET_4         0x194
#define RX_MASK_B2							BITS(0, 2)
#define RX_OFFSET_B2						0
#define STREAM_MASK_B0						BITS(3, 5)
#define STREAM_OFFSET_B0					3

#define EEPROM_ANTENNA_CFG_OFFSET_5         0x195
#define STREAM_MASK_B1						BITS(0, 2)
#define STREAM_OFFSET_B1					0
#define STREAM_MASK_B2						BITS(3, 5)
#define STREAM_OFFSET_B2					3
#else
#define EEPROM_ANTENNA_CFG_OFFSET           0x190
#define TX_MASK                             BITS(0, 2)
#define TX_OFFSET                           0
#define RX_MASK                             BITS(3, 5)
#define RX_OFFSET                           3
#endif /* ADIE_MT7977 */

#define BELLWETHER_EEPROM_DEFAULT_FILE_PATH                   "/lib/firmware/BELLWETHER_EEPROM.bin"

/* rxv dara word */
#define E1_RXV_PACKET_HEADER_DW_NUM    2
#define E1_RXV_ENTRY_HEADER_DW_NUM    2
#define E1_CMN_RXV1_DW_NUM    18
#define E1_CMN_RXV2_DW_NUM    20
#define E1_USR_RXV1_DW_NUM    2
#define E1_USR_RXV2_DW_NUM    4
#define E2_RXV_PACKET_HEADER_DW_NUM    2
#define E2_RXV_ENTRY_HEADER_DW_NUM    2
#define E2_CMN_RXV1_DW_NUM    18
#define E2_CMN_RXV2_DW_NUM    26
#define E2_USR_RXV1_DW_NUM    2
#define E2_USR_RXV2_DW_NUM    4

/* rxv double data word low/high cycle */
#define RXV_DDW0_L     0
#define RXV_DDW0_H     1
#define RXV_DDW1_L     2
#define RXV_DDW1_H     3
#define RXV_DDW2_L     4
#define RXV_DDW2_H     5
#define RXV_DDW3_L     6
#define RXV_DDW3_H     7
#define RXV_DDW4_L     8
#define RXV_DDW4_H     9
#define RXV_DDW5_L     10
#define RXV_DDW5_H     11
#define RXV_DDW6_L     12
#define RXV_DDW6_H     13
#define RXV_DDW7_L     14
#define RXV_DDW7_H     15
#define RXV_DDW8_L     16
#define RXV_DDW8_H     17
#define RXV_DDW9_L     18
#define RXV_DDW9_H     19
#define RXV_DDW10_L    20
#define RXV_DDW10_H    21

#define MUM_VHT_4MU_GRP_NUM 5

#define TSSI_CAL_2G_SIZE  (9 * 4)
#define TSSI_CAL_5G_SIZE  (48 * 4)
#define DNL_CAL_SIZE      (158 * 4)

#define TSSI_CAL_2G_EEPROM_OFST  0x308
#define TSSI_CAL_5G_EEPROM_OFST  0x380
#define TX_DNL_CAL_EEPROM_OFST   0xAFC
#define RX_GAIN_CAL_EEPROM_OFST  0x1830
#define RX_GAIN_CAL_EERPOM_6G_WF0_GP10_WF1_GP_13_OFSET (0x19DF - 0x1970)
#define RX_GAIN_CAL_EERPOM_6G_WF1_GP14_WF3_GP_13_OFSET (0x1AAF - 0x1A00)


/* RF LOCKDOWN */
#define COUNTRY_CODE_BYTE0_EEPROME_OFFSET   0x5C
#define COUNTRY_CODE_BYTE1_EEPROME_OFFSET   0x5D
#define COUNTRY_REGION_2G_EEPROME_OFFSET    0x5E
#define COUNTRY_REGION_5G_EEPROME_OFFSET    0x5F
#define COUNTRY_REGION_VALIDATION_MASK      BIT(7)
#define COUNTRY_REGION_VALIDATION_OFFSET    7
#define COUNTRY_REGION_CONTENT_MASK         BITS(0, 6)
#define RF_LOCKDOWN_EEPROME_BLOCK_OFFSET    0x50
#define RF_LOCKDOWN_EEPROME_COLUMN_OFFSET   0xB
#define RF_LOCKDOWN_EEPROME_OFFSET          0x5B
#define RF_LOCKDOWN_EEPROME_MASK            BIT(7)
#define RF_LOCKDOWN_EEPROME_SHIFT           7
#define RF_LOCKDOWN_EEPROME_SKU_TBL_OFFSET  0x5B
#define RF_LOCKDOWN_EEPROME_SKU_TBL_MASK    BITS(0, 6)
#define RF_LOCKDOWN_EEPROME_SKU_TBL_SHIFT   0
#define RF_VALIDATION_NUMBER                10

/* Rx info */
#define RX_RCPI_MASK						0x000000ff
#define RX_RCPI_SHIFT						0
#define RX_FAGC_RSSI_WB_MASK				0x0000ff00
#define RX_FAGC_RSSI_WB_SHIFT				8
#define RX_FAGC_RSSI_ADC_MASK				0x00ff0000
#define RX_FAGC_RSSI_ADC_SHIFT				16
#define RX_FAGC_RSSI_IB_MASK				0xff000000
#define RX_FAGC_RSSI_IB_SHIFT				24
#define RX_CFO_MASK							0x001fffff
#define RX_CFO_SHIFT						0
#define RX_CFO_SEL0_MASK					0x000000ff
#define RX_CFO_SEL0_SHIFT					0


extern const uint8_t SINGLE_SKU_PARSE_TABLE_LENGTH[SINGLE_SKU_TYPE_PARSE_NUM_V1];

extern const uint8_t BACKOFF_TABLE_BF_LENGTH[BACKOFF_TYPE_PARSE_NUM_V1];
extern const uint8_t BACKOFF_FILL_TABLE_BF_LENGTH[BACKOFF_PARAM_NUM_V1];

/** Tx Power Rate Column Offset */
#define TXPOWER_RATE_CCK_OFFSET     (0)
#define TXPOWER_RATE_OFDM_OFFSET    (TXPOWER_RATE_CCK_OFFSET  + MODULATION_SYSTEM_CCK_NUM)
#define TXPOWER_RATE_HT20_OFFSET    (TXPOWER_RATE_OFDM_OFFSET + MODULATION_SYSTEM_OFDM_NUM)
#define TXPOWER_RATE_HT40_OFFSET    (TXPOWER_RATE_HT20_OFFSET + MODULATION_SYSTEM_HT20_NUM)
#define TXPOWER_RATE_VHT20_OFFSET   (TXPOWER_RATE_HT40_OFFSET + MODULATION_SYSTEM_HT40_NUM)
#define TXPOWER_RATE_VHT40_OFFSET   (TXPOWER_RATE_VHT20_OFFSET + MODULATION_SYSTEM_VHT20_NUM)
#define TXPOWER_RATE_VHT80_OFFSET   (TXPOWER_RATE_VHT40_OFFSET + MODULATION_SYSTEM_VHT40_NUM)
#define TXPOWER_RATE_VHT160_OFFSET  (TXPOWER_RATE_VHT80_OFFSET + MODULATION_SYSTEM_VHT80_NUM)
#define TXPOWER_RATE_LEG_RATE_NUM   (TXPOWER_RATE_VHT160_OFFSET + MODULATION_SYSTEM_VHT160_NUM)
#define TXPOWER_RATE_HE26_OFFSET    (TXPOWER_RATE_LEG_RATE_NUM)
#define TXPOWER_RATE_HE52_OFFSET    (TXPOWER_RATE_HE26_OFFSET + MODULATION_SYSTEM_HE26_NUM)
#define TXPOWER_RATE_HE106_OFFSET   (TXPOWER_RATE_HE52_OFFSET + MODULATION_SYSTEM_HE52_NUM)
#define TXPOWER_RATE_HE242_OFFSET   (TXPOWER_RATE_HE106_OFFSET + MODULATION_SYSTEM_HE106_NUM)
#define TXPOWER_RATE_HE484_OFFSET   (TXPOWER_RATE_HE242_OFFSET + MODULATION_SYSTEM_HE242_NUM)
#define TXPOWER_RATE_HE996_OFFSET   (TXPOWER_RATE_HE484_OFFSET + MODULATION_SYSTEM_HE484_NUM)
#define TXPOWER_RATE_HE996X2_OFFSET (TXPOWER_RATE_HE996_OFFSET + MODULATION_SYSTEM_HE996_NUM)
#define TXPOWER_RATE_HE_NUM         (TXPOWER_RATE_HE996X2_OFFSET + MODULATION_SYSTEM_HE996X2_NUM)
#define TXPOWER_RATE_EHT26_OFFSET   (TXPOWER_RATE_HE_NUM)
#define TXPOWER_RATE_EHT52_OFFSET   (TXPOWER_RATE_EHT26_OFFSET + MODULATION_SYSTEM_EHT26_NUM)
#define TXPOWER_RATE_EHT106_OFFSET  (TXPOWER_RATE_EHT52_OFFSET + MODULATION_SYSTEM_EHT52_NUM)
#define TXPOWER_RATE_EHT242_OFFSET  (TXPOWER_RATE_EHT106_OFFSET + MODULATION_SYSTEM_EHT106_NUM)
#define TXPOWER_RATE_EHT484_OFFSET  (TXPOWER_RATE_EHT242_OFFSET + MODULATION_SYSTEM_EHT242_NUM)
#define TXPOWER_RATE_EHT996_OFFSET  (TXPOWER_RATE_EHT484_OFFSET + MODULATION_SYSTEM_EHT484_NUM)
#define TXPOWER_RATE_EHT996X2_OFFSET        (TXPOWER_RATE_EHT996_OFFSET + MODULATION_SYSTEM_EHT996_NUM)
#define TXPOWER_RATE_EHT996X4_OFFSET        (TXPOWER_RATE_EHT996X2_OFFSET + MODULATION_SYSTEM_EHT996X2_NUM)
#define TXPOWER_RATE_EHT26_52_OFFSET        (TXPOWER_RATE_EHT996X4_OFFSET + MODULATION_SYSTEM_EHT996X4_NUM)
#define TXPOWER_RATE_EHT26_106_OFFSET       (TXPOWER_RATE_EHT26_52_OFFSET + MODULATION_SYSTEM_EHT26_52_NUM)
#define TXPOWER_RATE_EHT484_242_OFFSET      (TXPOWER_RATE_EHT26_106_OFFSET + MODULATION_SYSTEM_EHT26_106_NUM)
#define TXPOWER_RATE_EHT996_484_OFFSET      (TXPOWER_RATE_EHT484_242_OFFSET + MODULATION_SYSTEM_EHT484_242_NUM)
#define TXPOWER_RATE_EHT996_484_242_OFFSET  (TXPOWER_RATE_EHT996_484_OFFSET + MODULATION_SYSTEM_EHT996_484_NUM)
#define TXPOWER_RATE_EHT996X2_484_OFFSET    (TXPOWER_RATE_EHT996_484_242_OFFSET + MODULATION_SYSTEM_EHT996_484_242_NUM)
#define TXPOWER_RATE_EHT996X3_OFFSET        (TXPOWER_RATE_EHT996X2_484_OFFSET + MODULATION_SYSTEM_EHT996X2_484_NUM)
#define TXPOWER_RATE_EHT996X3_484_OFFSET    (TXPOWER_RATE_EHT996X3_OFFSET + MODULATION_SYSTEM_EHT996X3_NUM)
#define TXPOWER_RATE_EHT_NUM                (TXPOWER_RATE_EHT996X3_484_OFFSET + MODULATION_SYSTEM_EHT996X3_484_NUM)
#define TXPOWER_RATE_NUM                    (TXPOWER_RATE_EHT_NUM)

/*
 * Used for DNL + TSSI Calibration happen in MP-Line state
 * 3 Channel for G-band L/M/H channel
 * 16 Channel for A-band L/H channel
 */
extern uint16_t BELLWETHER_DNL_CAL_GBAND_BW20_FREQ[];
extern uint16_t BELLWETHER_DNL_CAL_ABAND_BW20_FREQ[];
extern uint16_t BELLWETHER_DNL_CAL_BW20_FREQ[];

extern uint16_t BELLWETHER_DNL_CAL_GBAND_BW20_CH[];
extern uint16_t BELLWETHER_DNL_CAL_ABAND_BW20_CH[];
extern uint16_t BELLWETHER_DNL_CAL_BW20_CH[];

extern uint16_t BELLWETHER_DNL_CAL_GBAND_BW20_SIZE;
extern uint16_t BELLWETHER_DNL_CAL_ABAND_BW20_SIZE;
extern uint16_t BELLWETHER_DNL_CAL_BW20_FREQ_SIZE;

extern uint16_t BELLWETHER_DNL_CAL_GBAND_BW20_CH_SIZE;
extern uint16_t BELLWETHER_DNL_CAL_ABAND_BW20_CH_SIZE;
extern uint16_t BELLWETHER_DNL_CAL_B20_CH_SIZE;

void bellwether_init(struct _RTMP_ADAPTER *pAd);
VOID bellwether_chip_dbg_init(struct _RTMP_CHIP_DBG *dbg_ops);
INT bellwetherAsicArchOpsInit(struct _RTMP_ADAPTER *pAd);

void bellwether_init_default(
	void *ph_dev_obj);


#ifdef PRE_CAL_BELLWETHER_SUPPORT

enum {
    GBAND = 0,
    ABAND = 1,
};


#ifdef RTMP_FLASH_SUPPORT
#define PRECAL_INDICATION_BYTE 0x62
enum PRECAL_INDICATION_BIT_OFFSET {
	GROUP_PRECAL_INDN_BIT = 0,
	DPD5G_PRECAL_INDN_BIT,
	DPD2G_PRECAL_INDN_BIT,
};

#define CAL_PRE_CAL_SIZE_OFFSET  3584	/* DW0 : 0xE00 ~ 0xE03 Used for save total pre-cal size
										*  DW1 : reserved
										*  DW2 : reserved
										*  DW3 : reserved
										*/
#define CAL_FLASH_OFFSET         3600  /* 0xE10 ~ 0x5780 Used for save Group calibration data */
#else
#define CAL_FLASH_OFFSET         0
#endif

/* Group Calibration item */
#define CAL_RESULT_SIZE          (4 * 1024)
#define CAL_RESULT_SIZE_5G       (40 * 1024)
#define CAL_RESULT_SIZE_6G       (5 * 1024)
#define CAL_RESULT_SIZE_ADCDCOC  (4 * 4)
#define PRE_CAL_TOTAL_SIZE       (CAL_RESULT_SIZE + CAL_RESULT_SIZE_5G + CAL_RESULT_SIZE_6G + CAL_RESULT_SIZE_ADCDCOC)

/* DPD & Flatness item */
#define DPD_FLATNESS_CAL_SIZE    (2 * 1024)
#define DPD_FLATNESS_5G_CHAN_NUM 24
#define DPD_FLATNESS_2G_CHAN_NUM 3
#define TOTAL_CHAN_FOR_DPD_CAL   (DPD_FLATNESS_5G_CHAN_NUM + DPD_FLATNESS_2G_CHAN_NUM)
#define DPD_CAL_5G_TOTAL_SIZE    (DPD_FLATNESS_CAL_SIZE * DPD_FLATNESS_5G_CHAN_NUM)
#define DPD_CAL_2G_TOTAL_SIZE    (DPD_FLATNESS_CAL_SIZE * DPD_FLATNESS_2G_CHAN_NUM)
#define DPD_CAL_TOTAL_SIZE       (DPD_FLATNESS_CAL_SIZE * TOTAL_CHAN_FOR_DPD_CAL)

/* Flash offset */
#define PRE_CAL_FLASH_OFFSET     (CAL_FLASH_OFFSET)
#define DPD_FLASH_OFFSET         (CAL_FLASH_OFFSET + PRE_CAL_TOTAL_SIZE)

/* Length limitation from Host to Firmware */
#define PRE_CAL_SET_MAX_CR_NUM   256
#define PRE_CAL_SET_MAX_LENGTH   (PRE_CAL_SET_MAX_CR_NUM * 4)

extern uint16_t BELLWETHER_DPD_FLATNESS_ABAND_BW20_FREQ[];
extern uint16_t BELLWETHER_DPD_FLATNESS_GBAND_BW20_FREQ[];
extern uint16_t BELLWETHER_DPD_FLATNESS_BW20_FREQ[];
extern uint16_t BELLWETHER_DPD_FLATNESS_ABAND_BW20_SIZE;
extern uint16_t BELLWETHER_DPD_FLATNESS_GBAND_BW20_SIZE;
extern uint16_t BELLWETHER_DPD_FLATNESS_BW20_FREQ_SIZE;

extern uint16_t BELLWETHER_DPD_FLATNESS_ABAND_BW20_CH[];
extern uint16_t BELLWETHER_DPD_FLATNESS_GBAND_BW20_CH[];
extern uint16_t BELLWETHER_DPD_FLATNESS_BW20_CH[];
extern uint16_t BELLWETHER_DPD_FLATNESS_ABAND_BW20_CH_SIZE;
extern uint16_t BELLWETHER_DPD_FLATNESS_GBAND_BW20_CH_SIZE;
extern uint16_t BELLWETHER_DPD_FLATNESS_B20_CH_SIZE;
#endif /*PRE_CAL_BELLWETHER_SUPPORT*/

/* testmode chip info */
#define TEST_CHIP_BAND_NUM	3
#define TEST_USED		1
#define TEST_UNUSED		0

enum TEST_BAND_USED {
	TEST_BAND0_IS_USED = TEST_USED,
	TEST_BAND1_IS_USED = TEST_UNUSED,
	TEST_BAND2_IS_USED = TEST_UNUSED
};
#endif /* __BELLWETHER__ */

