/*
 * Copyright (c) [2021], MediaTek Inc. All rights reserved.
 *
 * This software/firmware and related documentation ("MediaTek Software") are
 * protected under relevant copyright laws.
 * The information contained herein is confidential and proprietary to
 * MediaTek Inc. and/or its licensors.
 * Except as otherwise provided in the applicable licensing terms with
 * MediaTek Inc. and/or its licensors, any reproduction, modification, use or
 * disclosure of MediaTek Software, and information contained herein, in whole
 * or in part, shall be strictly prohibited.
*/

#ifndef _DOT11BE_EHT_H_
#define _DOT11BE_EHT_H_

#define DOT11_BE_D12	1	/* enable D1.2, default as D1.0 */

#include "dot11_base.h"

/* Per-STA Profile(octets=576) = [STA Control + STA Info](64) + [STA Profile](512)
 * if in tri-band, there are 2 Per-STA Profile (1152 octets),
 * 40 for ML IE TLV and common part */
#define EHT_MAX_STA_PROFILE_FIELD_LEN (BSS_MNGR_MAX_STA_PROFILE_LEN)
#define MAX_LEN_OF_MLIE	(40 + (BSS_MNGR_MAX_PER_STA_PROFILE_LEN * (CFG_WIFI_RAM_BAND_NUM - 1)))
#define MAX_LEN_OF_T2LIE			255
#define MAX_LEN_OF_RNRIE			255

#define MAX_MLD_GROUP_NUM 65 /* valid mlo group id: 0--64 */
#define MLD_LINK_MAX 16 /* this is link_id(0~15) of mld protocol */
#define MLD_STA_NONE 0xffff
#define MLD_GROUP_NONE 0xff

#define EHT_PORTING_TODO(x) DO_PRAGMA(message("EHT TODO - " #x))
#define SET_CAP_BITS(_cap, _capinfo, _value)\
{\
	_capinfo &= ~_cap##_MASK;\
	_capinfo |= ((_value << _cap##_SHIFT)\
			& _cap##_MASK);\
}

#define GET_CAP_BITS(_cap, _capinfo)\
	(((_capinfo) & _cap##_MASK)\
		>> _cap##_SHIFT)

#define CAP_BITS_MASK(_cap)\
	BITS(_cap##_SHIFT, (_cap##_SHIFT + _cap##_BITS - 1))

/*
 * Refer to Draft P802.11be_D1.2 @20211108
 *
 * EHT Operation           EID EXT: 106
 * Multi-Link              EID EXT: 107
 * EHT Capabilities        EID EXT: 108
 * TID-To-Link Mapping     EID EXT: 109
 * Multi-Link Traffic      EID EXT: 110
 *
 */
/* EHT EID EXT */
#ifdef DOT11_BE_D12
#define EID_EXT_EHT_OP                  106
#define EID_EXT_EHT_MULTI_LINK          107
#define EID_EXT_EHT_CAPS                108
#define EID_EXT_EHT_TID2LNK_MAP         109
#define EID_EXT_EHT_ML_TRAFFIC          110
#define EID_EXT_EHT_AID_BITMAP          134
#else /* Keep for reference to test with old 11be gen4m sta */
#define EID_EXT_EHT_MULTI_LINK          255
#define EID_EXT_EHT_CAPS                254
#define EID_EXT_EHT_OP                  253
#define EID_EXT_EHT_TID2LNK_MAP         252
#endif

/* sub-element of EID_EXT_MULTI_LINK */
#define SUB_IE_MLD_PER_STA_PROFILE	0
#define SUB_IE_MLD_VENDOR_SPECIFIC	221
#define SUB_IE_MLD_FRAGMENT			254

/* Status Code */
#define DENIED_STA_MLD_WITH_EXISTING_MLD_ASSOCIATION	255
#define NSEP_DENIED_UNAUTHORIZED						254
#define NSEP_DENIED_OTHER_REASON						253
#define DENIED_TID_TO_LINK_MAPPING						252
#define PREFERRED_TID_TO_LINK_MAPPING_SUGGESTED			251

/* Protected EHT Action field values */
#define EHT_PROT_ACT_T2LM_REQUEST		0
#define EHT_PROT_ACT_T2LM_RESPONSE		1
#define EHT_PROT_ACT_T2LM_TEARDOWN		2
#define EHT_PROT_ACT_EPCS_REQUEST		3
#define EHT_PROT_ACT_EPCS_RESPONSE		4
#define EHT_PROT_ACT_EPCS_TEARDOWN		5
#define EHT_PROT_ACT_EML_OP_NOTIF		6
#define EHT_PROT_ACT_LINK_RECOMM		7

/*
 * EHT Multi-Link element
 *   Element ID:			1 octet
 *   Length:				1 octet
 *   Element ID Ext:		1 octet
 *   Multi-Link Control:	2 octets
 *   Common Info:			variable
 *   Link Info:				variable
 */

/* previous commit for compilation, will be removed finally */
#define SET_DOT11BE_ML_CTRL_MLD_MAC_PRESENT(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_ML_CTRL_MLD_MAC_PRESENT, _capinfo, _value)
#define GET_DOT11BE_ML_CTRL_MLD_MAC_PRESENT(_capinfo) \
	GET_CAP_BITS(DOT11BE_ML_CTRL_MLD_MAC_PRESENT, _capinfo)
#define TBTT_INFO_MLD_PARAM_CHG_SEQ_SHIFT   12
#define TBTT_INFO_MLD_PARAM_CHG_SEQ_MASK    (0xFF << 12)
#define SET_TBTT_INFO_MLD_PARAM_CHG_SEQ(param, seq) \
	((param) |= ((seq) << TBTT_INFO_MLD_PARAM_CHG_SEQ_SHIFT))
#define DOT11BE_ML_CTRL_MLD_MAC_PRESENT_SHIFT \
	DOT11BE_ML_CTRL_TYPE_BITS
#define DOT11BE_ML_CTRL_MLD_MAC_PRESENT_BTIS 1
#define DOT11BE_ML_CTRL_MLD_MAC_PRESENT_MASK \
	BIT(DOT11BE_ML_CTRL_MLD_MAC_PRESENT_SHIFT)


/*
 * Multi-Link Control field
 *   Type:				[2:0]
 *   Reserved:			[3]
 *   Presence Bitmap:	[15:4]
 */
enum {
	ML_CTRL_TYPE_BASIC = 0,
	ML_CTRL_TYPE_PROBE_REQ = 1,
	ML_CTRL_TYPE_RECONFIG = 2,
	ML_CTRL_TYPE_TDLS = 3,
	ML_CTRL_TYPE_PRIO_ACCESS = 4,
};

/* Presence Bitmap subfield of Basic ML IE */
#define DOT11BE_ML_BASIC_PRESENCE_LINK_ID           BIT(0)
#define DOT11BE_ML_BASIC_PRESENCE_BSS_CHG_CNT       BIT(1)
#define DOT11BE_ML_BASIC_PRESENCE_MD_SYNC_DELAY     BIT(2)
#define DOT11BE_ML_BASIC_PRESENCE_EML_CAPS          BIT(3)
#define DOT11BE_ML_BASIC_PRESENCE_MLD_CAPS_N_OP     BIT(4)
#define DOT11BE_ML_BASIC_PRESENCE_MLD_ID            BIT(5)
#define DOT11BE_ML_BASIC_PRESENCE_EXT_MLD_CAPS_N_OP BIT(6) /* D3.0 */

/* Presence Bitmap subfield of Probe Req. ML IE */
#define DOT11BE_ML_PROBE_REQ_PRESENCE_MLD_ID    BIT(0)

/* Presence Bitmap subfield of Reconfiguration ML IE */
#define DOT11BE_ML_RECONFIG_PRESENCE_MLD_MAC_ADDR    BIT(0)

#define DOT11BE_ML_CTRL_TYPE_SHIFT 0
#define DOT11BE_ML_CTRL_TYPE_BITS 3
#define DOT11BE_ML_CTRL_TYPE_MASK \
	CAP_BITS_MASK(DOT11BE_ML_CTRL_TYPE)

#define DOT11BE_ML_CTRL_PRESENCE_BMAP_SHIFT 4
#define DOT11BE_ML_CTRL_PRESENCE_BMAP_BITS 12
#define DOT11BE_ML_CTRL_PRESENCE_BMAP_MASK \
	CAP_BITS_MASK(DOT11BE_ML_CTRL_PRESENCE_BMAP)

#define SET_DOT11BE_ML_CTRL_TYPE(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_ML_CTRL_TYPE, _capinfo, _value)
#define GET_DOT11BE_ML_CTRL_TYPE(_capinfo) \
	GET_CAP_BITS(DOT11BE_ML_CTRL_TYPE, _capinfo)

#define SET_DOT11BE_ML_CTRL_PRESENCE_BMAP(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_ML_CTRL_PRESENCE_BMAP, _capinfo, _value)
#define GET_DOT11BE_ML_CTRL_PRESENCE_BMAP(_capinfo) \
	GET_CAP_BITS(DOT11BE_ML_CTRL_PRESENCE_BMAP, _capinfo)

/*********** Basic ML IE ***********/

/*
 * Common Info field
 */

/* Link ID Info */
#define DOT11BE_ML_BASIC_CMM_LINK_ID_SHIFT 0
#define DOT11BE_ML_BASIC_CMM_LINK_ID_BITS 4
#define DOT11BE_ML_BASIC_CMM_LINK_ID_MASK \
	CAP_BITS_MASK(DOT11BE_ML_BASIC_CMM_LINK_ID)

/* Medium Synchronization Delay Information subfield */
#define DOT11BE_ML_BASIC_CMM_MD_SYNC_DELAY_DUR_SHIFT 0
#define DOT11BE_ML_BASIC_CMM_MD_SYNC_DELAY_DUR_BITS 8
#define DOT11BE_ML_BASIC_CMM_MD_SYNC_DELAY_DUR_MASK \
	CAP_BITS_MASK(DOT11BE_ML_BASIC_CMM_MD_SYNC_DELAY_DUR)

#define DOT11BE_ML_BASIC_CMM_MD_SYNC_OFDM_ED_THR_SHIFT 8
#define DOT11BE_ML_BASIC_CMM_MD_SYNC_OFDM_ED_THR_BITS 4
#define DOT11BE_ML_BASIC_CMM_MD_SYNC_OFDM_ED_THR_MASK \
	CAP_BITS_MASK(DOT11BE_ML_BASIC_CMM_MD_SYNC_OFDM_ED_THR)

#define DOT11BE_ML_BASIC_CMM_MD_SYNC_MAX_TXOP_SHIFT 12
#define DOT11BE_ML_BASIC_CMM_MD_SYNC_MAX_TXOP_BITS 4
#define DOT11BE_ML_BASIC_CMM_MD_SYNC_MAX_TXOP_MASK \
	CAP_BITS_MASK(DOT11BE_ML_BASIC_CMM_MD_SYNC_MAX_TXOP)

/* EML Capabilities subfield */
#define DOT11BE_ML_BASIC_CMM_EML_CAP_EMLSR_SUP_SHIFT 0
#define DOT11BE_ML_BASIC_CMM_EML_CAP_EMLSR_SUP_BITS 1
#define DOT11BE_ML_BASIC_CMM_EML_CAP_EMLSR_SUP_MASK \
	CAP_BITS_MASK(DOT11BE_ML_BASIC_CMM_EML_CAP_EMLSR_SUP)

#define DOT11BE_ML_BASIC_CMM_EML_CAP_EMLSR_PADDING_DELAY_SHIFT 1
#define DOT11BE_ML_BASIC_CMM_EML_CAP_EMLSR_PADDING_DELAY_BITS 3
#define DOT11BE_ML_BASIC_CMM_EML_CAP_EMLSR_PADDING_DELAY_MASK \
	CAP_BITS_MASK(DOT11BE_ML_BASIC_CMM_EML_CAP_EMLSR_PADDING_DELAY)

#define DOT11BE_ML_BASIC_CMM_EML_CAP_EMLSR_TRANS_DELAY_SHIFT 4
#define DOT11BE_ML_BASIC_CMM_EML_CAP_EMLSR_TRANS_DELAY_BITS 3
#define DOT11BE_ML_BASIC_CMM_EML_CAP_EMLSR_TRANS_DELAY_MASK \
	CAP_BITS_MASK(DOT11BE_ML_BASIC_CMM_EML_CAP_EMLSR_TRANS_DELAY)

#define DOT11BE_ML_BASIC_CMM_EML_CAP_EMLMR_SUP_SHIFT 7
#define DOT11BE_ML_BASIC_CMM_EML_CAP_EMLMR_SUP_BITS 1
#define DOT11BE_ML_BASIC_CMM_EML_CAP_EMLMR_SUP_MASK \
	CAP_BITS_MASK(DOT11BE_ML_BASIC_CMM_EML_CAP_EMLMR_SUP)

#define DOT11BE_ML_BASIC_CMM_EML_CAP_EMLMR_DELAY_SHIFT 8
#define DOT11BE_ML_BASIC_CMM_EML_CAP_EMLMR_DELAY_BITS 3
#define DOT11BE_ML_BASIC_CMM_EML_CAP_EMLMR_DELAY_MASK \
	CAP_BITS_MASK(DOT11BE_ML_BASIC_CMM_EML_CAP_EMLMR_DELAY)

#define DOT11BE_ML_BASIC_CMM_EML_CAP_TRANS_TO_SHIFT 11
#define DOT11BE_ML_BASIC_CMM_EML_CAP_TRANS_TO_BITS 4
#define DOT11BE_ML_BASIC_CMM_EML_CAP_TRANS_TO_MASK \
	CAP_BITS_MASK(DOT11BE_ML_BASIC_CMM_EML_CAP_TRANS_TO)

#define DOT11BE_ML_BASIC_CMM_EML_CAP_RESERVED_SHIFT 15
#define DOT11BE_ML_BASIC_CMM_EML_CAP_RESERVED_BITS 1
#define DOT11BE_ML_BASIC_CMM_EML_CAP_RESERVED_MASK \
	CAP_BITS_MASK(DOT11BE_ML_BASIC_CMM_EML_CAP_RESERVED)

/* MLD Capabilities subfield */
#define DOT11BE_ML_BASIC_CMM_MLD_CAP_MAX_LINKS_SHIFT 0
#define DOT11BE_ML_BASIC_CMM_MLD_CAP_MAX_LINKS_BITS 4
#define DOT11BE_ML_BASIC_CMM_MLD_CAP_MAX_LINKS_MASK \
	CAP_BITS_MASK(DOT11BE_ML_BASIC_CMM_MLD_CAP_MAX_LINKS)

#define DOT11BE_ML_BASIC_CMM_MLD_CAP_SRS_SUP_SHIFT 4
#define DOT11BE_ML_BASIC_CMM_MLD_CAP_SRS_SUP_BITS 1
#define DOT11BE_ML_BASIC_CMM_MLD_CAP_SRS_SUP_MASK \
	CAP_BITS_MASK(DOT11BE_ML_BASIC_CMM_MLD_CAP_SRS_SUP)

#define DOT11BE_ML_BASIC_CMM_MLD_CAP_TID2LNK_NEGO_SUP_SHIFT 5
#define DOT11BE_ML_BASIC_CMM_MLD_CAP_TID2LNK_NEGO_SUP_BITS 2
#define DOT11BE_ML_BASIC_CMM_MLD_CAP_TID2LNK_NEGO_SUP_MASK \
	CAP_BITS_MASK(DOT11BE_ML_BASIC_CMM_MLD_CAP_TID2LNK_NEGO_SUP)

#define DOT11BE_ML_BASIC_CMM_MLD_CAP_FREQ_SEP_STR_SHIFT 7
#define DOT11BE_ML_BASIC_CMM_MLD_CAP_FREQ_SEP_STR_BITS 5
#define DOT11BE_ML_BASIC_CMM_MLD_CAP_FREQ_SEP_STR_MASK \
	CAP_BITS_MASK(DOT11BE_ML_BASIC_CMM_MLD_CAP_FREQ_SEP_STR)

#define SET_DOT11BE_ML_BASIC_CMM_LINK_ID(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_ML_BASIC_CMM_LINK_ID, _capinfo, _value)
#define GET_DOT11BE_ML_BASIC_CMM_LINK_ID(_capinfo) \
	GET_CAP_BITS(DOT11BE_ML_BASIC_CMM_LINK_ID, _capinfo)

#define SET_DOT11BE_ML_BASIC_CMM_MD_SYNC_DELAY_DUR(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_ML_BASIC_CMM_MD_SYNC_DELAY_DUR, _capinfo, _value)
#define GET_DOT11BE_ML_BASIC_CMM_MD_SYNC_DELAY_DUR(_capinfo) \
	GET_CAP_BITS(DOT11BE_ML_BASIC_CMM_MD_SYNC_DELAY_DUR, _capinfo)

#define SET_DOT11BE_ML_BASIC_CMM_MD_SYNC_OFDM_ED_THR(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_ML_BASIC_CMM_MD_SYNC_OFDM_ED_THR, _capinfo, _value)
#define GET_DOT11BE_ML_BASIC_CMM_MD_SYNC_OFDM_ED_THR(_capinfo) \
	GET_CAP_BITS(DOT11BE_ML_BASIC_CMM_MD_SYNC_OFDM_ED_THR, _capinfo)

#define SET_DOT11BE_ML_BASIC_CMM_MD_SYNC_MAX_TXOP(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_ML_BASIC_CMM_MD_SYNC_MAX_TXOP, _capinfo, _value)
#define GET_DOT11BE_ML_BASIC_CMM_MD_SYNC_MAX_TXOP(_capinfo) \
	GET_CAP_BITS(DOT11BE_ML_BASIC_CMM_MD_SYNC_MAX_TXOP, _capinfo)

#define SET_DOT11BE_ML_BASIC_CMM_EML_CAP_EMLSR_SUP(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_ML_BASIC_CMM_EML_CAP_EMLSR_SUP, _capinfo, _value)
#define GET_DOT11BE_ML_BASIC_CMM_EML_CAP_EMLSR_SUP(_capinfo) \
	GET_CAP_BITS(DOT11BE_ML_BASIC_CMM_EML_CAP_EMLSR_SUP, _capinfo)

#define SET_DOT11BE_ML_BASIC_CMM_EML_CAP_EMLSR_PADDING_DELAY(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_ML_BASIC_CMM_EML_CAP_EMLSR_PADDING_DELAY, _capinfo, _value)
#define GET_DOT11BE_ML_BASIC_CMM_EML_CAP_EMLSR_PADDING_DELAY(_capinfo) \
	GET_CAP_BITS(DOT11BE_ML_BASIC_CMM_EML_CAP_EMLSR_PADDING_DELAY, _capinfo)

#define SET_DOT11BE_ML_BASIC_CMM_EML_CAP_EMLSR_TRANS_DELAY(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_ML_BASIC_CMM_EML_CAP_EMLSR_TRANS_DELAY, _capinfo, _value)
#define GET_DOT11BE_ML_BASIC_CMM_EML_CAP_EMLSR_TRANSITION_DELAY(_capinfo) \
	GET_CAP_BITS(DOT11BE_ML_BASIC_CMM_EML_CAP_EMLSR_TRANS_DELAY, _capinfo)

#define SET_DOT11BE_ML_BASIC_CMM_EML_CAP_EMLMR_SUP(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_ML_BASIC_CMM_EML_CAP_EMLMR_SUP, _capinfo, _value)
#define GET_DOT11BE_ML_BASIC_CMM_EML_CAP_EMLMR_SUP(_capinfo) \
	GET_CAP_BITS(DOT11BE_ML_BASIC_CMM_EML_CAP_EMLMR_SUP, _capinfo)

#define SET_DOT11BE_ML_BASIC_CMM_EML_CAP_EMLMR_DELAY(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_ML_BASIC_CMM_EML_CAP_EMLMR_DELAY, _capinfo, _value)
#define GET_DOT11BE_ML_BASIC_CMM_EML_CAP_EMLMR_DELAY(_capinfo) \
	GET_CAP_BITS(DOT11BE_ML_BASIC_CMM_EML_CAP_EMLMR_DELAY, _capinfo)

#define SET_DOT11BE_ML_BASIC_CMM_EML_CAP_TRANS_TO(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_ML_BASIC_CMM_EML_CAP_TRANS_TO, _capinfo, _value)
#define GET_DOT11BE_ML_BASIC_CMM_EML_CAP_TRANS_TO(_capinfo) \
	GET_CAP_BITS(DOT11BE_ML_BASIC_CMM_EML_CAP_TRANS_TO, _capinfo)

#define SET_DOT11BE_ML_BASIC_CMM_MLD_CAP_MAX_LINKS(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_ML_BASIC_CMM_MLD_CAP_MAX_LINKS, _capinfo, _value)
#define GET_DOT11BE_ML_BASIC_CMM_MLD_CAP_MAX_LINKS(_capinfo) \
	GET_CAP_BITS(DOT11BE_ML_BASIC_CMM_MLD_CAP_MAX_LINKS, _capinfo)

#define SET_DOT11BE_ML_BASIC_CMM_MLD_CAP_SRS_SUP(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_ML_BASIC_CMM_MLD_CAP_SRS_SUP, _capinfo, _value)
#define GET_DOT11BE_ML_BASIC_CMM_MLD_CAP_SRS_SUP(_capinfo) \
	GET_CAP_BITS(DOT11BE_ML_BASIC_CMM_MLD_CAP_SRS_SUP, _capinfo)

#define SET_DOT11BE_ML_BASIC_CMM_MLD_CAP_TID2LNK_NEGO_SUP(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_ML_BASIC_CMM_MLD_CAP_TID2LNK_NEGO_SUP, _capinfo, _value)
#define GET_DOT11BE_ML_BASIC_CMM_MLD_CAP_TID2LNK_NEGO_SUP(_capinfo) \
	GET_CAP_BITS(DOT11BE_ML_BASIC_CMM_MLD_CAP_TID2LNK_NEGO_SUP, _capinfo)

#define SET_DOT11BE_ML_BASIC_CMM_MLD_CAP_FREQ_SEP_STR(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_ML_BASIC_CMM_MLD_CAP_FREQ_SEP_STR, _capinfo, _value)
#define GET_DOT11BE_ML_BASIC_CMM_MLD_CAP_FREQ_SEP_STR(_capinfo) \
	GET_CAP_BITS(DOT11BE_ML_BASIC_CMM_MLD_CAP_FREQ_SEP_STR, _capinfo)

/*
 * Link Info - Per-STA Profile subelement
 *   Subelement ID:		1 octet
 *   Length:			1 octet
 *   STA Control:		2 octets
 *   STA Info:			variable
 *   STA Profile:		variable
 */

/*
 * STA Control field
 */

#define DOT11BE_ML_PER_STA_CTRL_LINK_ID_SHIFT 0
#define DOT11BE_ML_PER_STA_CTRL_LINK_ID_BITS 4
#define DOT11BE_ML_PER_STA_CTRL_LINK_ID_MASK \
	CAP_BITS_MASK(DOT11BE_ML_PER_STA_CTRL_LINK_ID)

#define DOT11BE_ML_PER_STA_CTRL_COMP_PROF_SHIFT 4
#define DOT11BE_ML_PER_STA_CTRL_COMP_PROF_BITS 1
#define DOT11BE_ML_PER_STA_CTRL_COMP_PROF_MASK \
	CAP_BITS_MASK(DOT11BE_ML_PER_STA_CTRL_COMP_PROF)

#define DOT11BE_ML_PER_STA_CTRL_MAC_ADDR_PRES_SHIFT 5
#define DOT11BE_ML_PER_STA_CTRL_MAC_ADDR_PRES_BITS 1
#define DOT11BE_ML_PER_STA_CTRL_MAC_ADDR_PRES_MASK \
	CAP_BITS_MASK(DOT11BE_ML_PER_STA_CTRL_MAC_ADDR_PRES)

#define DOT11BE_ML_PER_STA_CTRL_BCN_INT_PRES_SHIFT 6
#define DOT11BE_ML_PER_STA_CTRL_BCN_INT_PRES_BITS 1
#define DOT11BE_ML_PER_STA_CTRL_BCN_INT_PRES_MASK \
	CAP_BITS_MASK(DOT11BE_ML_PER_STA_CTRL_BCN_INT_PRES)

#define DOT11BE_ML_PER_STA_CTRL_TSF_OFFSET_PRES_SHIFT 7
#define DOT11BE_ML_PER_STA_CTRL_TSF_OFFSET_PRES_BITS 1
#define DOT11BE_ML_PER_STA_CTRL_TSF_OFFSET_PRES_MASK \
	CAP_BITS_MASK(DOT11BE_ML_PER_STA_CTRL_TSF_OFFSET_PRES)

#define DOT11BE_ML_PER_STA_CTRL_DTIM_PRES_SHIFT 8
#define DOT11BE_ML_PER_STA_CTRL_DTIM_PRES_BITS 1
#define DOT11BE_ML_PER_STA_CTRL_DTIM_PRES_MASK \
	CAP_BITS_MASK(DOT11BE_ML_PER_STA_CTRL_DTIM_PRES)

#define DOT11BE_ML_PER_STA_CTRL_NSTR_LPR_PRES_SHIFT 9
#define DOT11BE_ML_PER_STA_CTRL_NSTR_LPR_PRES_BITS 1
#define DOT11BE_ML_PER_STA_CTRL_NSTR_LPR_PRES_MASK \
	CAP_BITS_MASK(DOT11BE_ML_PER_STA_CTRL_NSTR_LPR_PRES)

#define DOT11BE_ML_PER_STA_CTRL_NSTR_BMAP_SIZE_SHIFT 10
#define DOT11BE_ML_PER_STA_CTRL_NSTR_BMAP_SIZE_BITS 1
#define DOT11BE_ML_PER_STA_CTRL_NSTR_BMAP_SIZE_MASK \
	CAP_BITS_MASK(DOT11BE_ML_PER_STA_CTRL_NSTR_BMAP_SIZE)

#define DOT11BE_ML_PER_STA_CTRL_BSS_CHG_CNT_PRES_SHIFT 11
#define DOT11BE_ML_PER_STA_CTRL_BSS_CHG_CNT_PRES_BITS 1
#define DOT11BE_ML_PER_STA_CTRL_BSS_CHG_CNT_PRES_MASK \
	CAP_BITS_MASK(DOT11BE_ML_PER_STA_CTRL_BSS_CHG_CNT_PRES)

#define SET_DOT11BE_ML_PER_STA_CTRL_LINK_ID(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_ML_PER_STA_CTRL_LINK_ID, _capinfo, _value)
#define GET_DOT11BE_ML_PER_STA_CTRL_LINK_ID(_capinfo) \
	GET_CAP_BITS(DOT11BE_ML_PER_STA_CTRL_LINK_ID, _capinfo)

#define SET_DOT11BE_ML_PER_STA_CTRL_COMP_PROF(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_ML_PER_STA_CTRL_COMP_PROF, _capinfo, _value)
#define GET_DOT11BE_ML_PER_STA_CTRL_COMP_PROF(_capinfo) \
	GET_CAP_BITS(DOT11BE_ML_PER_STA_CTRL_COMP_PROF, _capinfo)

#define SET_DOT11BE_ML_PER_STA_CTRL_MAC_ADDR_PRES(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_ML_PER_STA_CTRL_MAC_ADDR_PRES, _capinfo, _value)
#define GET_DOT11BE_ML_PER_STA_CTRL_MAC_ADDR_PRES(_capinfo) \
	GET_CAP_BITS(DOT11BE_ML_PER_STA_CTRL_MAC_ADDR_PRES, _capinfo)

#define SET_DOT11BE_ML_PER_STA_CTRL_BCN_INT_PRES(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_ML_PER_STA_CTRL_BCN_INT_PRES, _capinfo, _value)
#define GET_DOT11BE_ML_PER_STA_CTRL_BCN_INT_PRES(_capinfo) \
	GET_CAP_BITS(DOT11BE_ML_PER_STA_CTRL_BCN_INT_PRES, _capinfo)

#define SET_DOT11BE_ML_PER_STA_CTRL_TSF_OFFSET_PRES(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_ML_PER_STA_CTRL_TSF_OFFSET_PRES, _capinfo, _value)
#define GET_DOT11BE_ML_PER_STA_CTRL_TSF_OFFSET_PRES(_capinfo) \
	GET_CAP_BITS(DOT11BE_ML_PER_STA_CTRL_TSF_OFFSET_PRES, _capinfo)

#define SET_DOT11BE_ML_PER_STA_CTRL_DTIM_PRES(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_ML_PER_STA_CTRL_DTIM_PRES, _capinfo, _value)
#define GET_DOT11BE_ML_PER_STA_CTRL_DTIM_PRES(_capinfo) \
	GET_CAP_BITS(DOT11BE_ML_PER_STA_CTRL_DTIM_PRES, _capinfo)

#define SET_DOT11BE_ML_PER_STA_CTRL_NSTR_LPR_PRES(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_ML_PER_STA_CTRL_NSTR_LPR_PRES, _capinfo, _value)
#define GET_DOT11BE_ML_PER_STA_CTRL_NSTR_LPR_PRES(_capinfo) \
	GET_CAP_BITS(DOT11BE_ML_PER_STA_CTRL_NSTR_LPR_PRES, _capinfo)

#define SET_DOT11BE_ML_PER_STA_CTRL_NSTR_BMAP_SIZE(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_ML_PER_STA_CTRL_NSTR_BMAP_SIZE, _capinfo, _value)
#define GET_DOT11BE_ML_PER_STA_CTRL_NSTR_BMAP_SIZE(_capinfo) \
	GET_CAP_BITS(DOT11BE_ML_PER_STA_CTRL_NSTR_BMAP_SIZE, _capinfo)

#define SET_DOT11BE_ML_PER_STA_CTRL_BSS_CHG_CNT_PRES(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_ML_PER_STA_CTRL_BSS_CHG_CNT_PRES, _capinfo, _value)
#define GET_DOT11BE_ML_PER_STA_CTRL_BSS_CHG_CNT_PRES(_capinfo) \
	GET_CAP_BITS(DOT11BE_ML_PER_STA_CTRL_BSS_CHG_CNT_PRES, _capinfo)

/*********** Probe Request ML IE ***********/

/*
 * Common Info field
 */

/* MLD ID */
#define DOT11BE_ML_PROBE_REQ_CMM_MLD_ID_SHIFT 0
#define DOT11BE_ML_PROBE_REQ_CMM_MLD_ID_BITS 1
#define DOT11BE_ML_PROBE_REQ_CMM_MLD_ID_MASK \
	CAP_BITS_MASK(DOT11BE_ML_PROBE_REQ_CMM_MLD_ID)

/*
 * Link Info - Per-STA Profile subelement
 *   Subelement ID:		1 octet
 *   Length:			1 octet
 *   STA Control:		2 octets
 *   STA Profile:		variable
 */

/*
 * STA Control field
 */

#define DOT11BE_ML_PROBE_REQ_PER_STA_CTRL_LINK_ID_SHIFT 0
#define DOT11BE_ML_PROBE_REQ_PER_STA_CTRL_LINK_ID_BITS 4
#define DOT11BE_ML_PROBE_REQ_PER_STA_CTRL_LINK_ID_MASK \
	CAP_BITS_MASK(DOT11BE_ML_PROBE_REQ_PER_STA_CTRL_LINK_ID)

#define DOT11BE_ML_PROBE_REQ_PER_STA_CTRL_COMP_PROF_SHIFT 4
#define DOT11BE_ML_PROBE_REQ_PER_STA_CTRL_COMP_PROF_BITS 1
#define DOT11BE_ML_PROBE_REQ_PER_STA_CTRL_COMP_PROF_MASK \
	CAP_BITS_MASK(DOT11BE_ML_PROBE_REQ_PER_STA_CTRL_COMP_PROF)

/*********** Reconfiguration ML IE ***********/

/*
 * Common Info field
 */

/*
 * Link Info - Per-STA Profile subelement
 *   Subelement ID:		1 octet
 *   Length:			1 octet
 *   STA Control:		2 octets
 *	 STA Info:			variable
 */

/*
 * STA Control field
 */

#define DOT11BE_ML_RECONFIG_PER_STA_CTRL_LINK_ID_SHIFT 0
#define DOT11BE_ML_RECONFIG_PER_STA_CTRL_LINK_ID_BITS 4
#define DOT11BE_ML_RECONFIG_PER_STA_CTRL_LINK_ID_MASK \
	CAP_BITS_MASK(DOT11BE_ML_RECONFIG_PER_STA_CTRL_LINK_ID)

#define DOT11BE_ML_RECONFIG_PER_STA_CTRL_COMP_PROF_SHIFT 4
#define DOT11BE_ML_RECONFIG_PER_STA_CTRL_COMP_PROF_BITS 1
#define DOT11BE_ML_RECONFIG_PER_STA_CTRL_COMP_PROF_MASK \
	CAP_BITS_MASK(DOT11BE_ML_RECONFIG_PER_STA_CTRL_COMP_PROF)

#define DOT11BE_ML_RECONFIG_PER_STA_CTRL_MAC_ADDR_PRES_SHIFT 5
#define DOT11BE_ML_RECONFIG_PER_STA_CTRL_MAC_ADDR_PRES_BITS 1
#define DOT11BE_ML_RECONFIG_PER_STA_CTRL_MAC_ADDR_PRES_MASK \
	CAP_BITS_MASK(DOT11BE_ML_RECONFIG_PER_STA_CTRL_MAC_ADDR_PRES)

#define DOT11BE_ML_RECONFIG_PER_STA_CTRL_AP_RM_TMR_PRES_SHIFT 6
#define DOT11BE_ML_RECONFIG_PER_STA_CTRL_AP_RM_TMR_PRES_BITS 1
#define DOT11BE_ML_RECONFIG_PER_STA_CTRL_AP_RM_TMR_PRES_MASK \
	CAP_BITS_MASK(DOT11BE_ML_RECONFIG_PER_STA_CTRL_AP_RM_TMR_PRES)

#define DOT11BE_ML_RECONFIG_PER_STA_CTRL_OP_UPD_TYPE_SHIFT 7
#define DOT11BE_ML_RECONFIG_PER_STA_CTRL_OP_UPD_TYPE_BITS 4
#define DOT11BE_ML_RECONFIG_PER_STA_CTRL_OP_UPD_TYPE_MASK \
	CAP_BITS_MASK(DOT11BE_ML_RECONFIG_PER_STA_CTRL_OP_UPD_TYPE)

#define DOT11BE_ML_RECONFIG_PER_STA_CTRL_OP_PARAM_PRES_SHIFT 11
#define DOT11BE_ML_RECONFIG_PER_STA_CTRL_OP_PARAM_PRES_BITS 1
#define DOT11BE_ML_RECONFIG_PER_STA_CTRL_OP_PARAM_PRES_MASK \
	CAP_BITS_MASK(DOT11BE_ML_RECONFIG_PER_STA_CTRL_OP_PARAM_PRES)

#define SET_DOT11BE_ML_RECONFIG_PER_STA_CTRL_LINK_ID(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_ML_RECONFIG_PER_STA_CTRL_LINK_ID, _capinfo, _value)
#define GET_DOT11BE_ML_RECONFIG_PER_STA_CTRL_LINK_ID(_capinfo) \
	GET_CAP_BITS(DOT11BE_ML_RECONFIG_PER_STA_CTRL_LINK_ID, _capinfo)

#define SET_DOT11BE_ML_RECONFIG_PER_STA_CTRL_COMP_PROF(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_ML_RECONFIG_PER_STA_CTRL_COMP_PROF, _capinfo, _value)
#define GET_DOT11BE_ML_RECONFIG_PER_STA_CTRL_COMP_PROF(_capinfo) \
	GET_CAP_BITS(DOT11BE_ML_RECONFIG_PER_STA_CTRL_COMP_PROF, _capinfo)

#define SET_DOT11BE_ML_RECONFIG_PER_STA_CTRL_MAC_ADDR_PRES(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_ML_RECONFIG_PER_STA_CTRL_MAC_ADDR_PRES, _capinfo, _value)
#define GET_DOT11BE_ML_RECONFIG_PER_STA_CTRL_MAC_ADDR_PRES(_capinfo) \
	GET_CAP_BITS(DOT11BE_ML_RECONFIG_PER_STA_CTRL_MAC_ADDR_PRES, _capinfo)

#define SET_DOT11BE_ML_RECONFIG_PER_STA_CTRL_AP_RM_TMR_PRES(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_ML_RECONFIG_PER_STA_CTRL_AP_RM_TMR_PRES, _capinfo, _value)
#define GET_DOT11BE_ML_RECONFIG_PER_STA_CTRL_AP_RM_TMR_PRES(_capinfo) \
	GET_CAP_BITS(DOT11BE_ML_RECONFIG_PER_STA_CTRL_AP_RM_TMR_PRES, _capinfo)

#define SET_DOT11BE_ML_RECONFIG_PER_STA_CTRL_OP_UPD_TYPE(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_ML_RECONFIG_PER_STA_CTRL_OP_UPD_TYPE, _capinfo, _value)
#define GET_DOT11BE_ML_RECONFIG_PER_STA_CTRL_OP_UPD_TYPE(_capinfo) \
	GET_CAP_BITS(DOT11BE_ML_RECONFIG_PER_STA_CTRL_OP_UPD_TYPE, _capinfo)

#define SET_DOT11BE_ML_RECONFIG_PER_STA_CTRL_OP_PARAM_PRES(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_ML_RECONFIG_PER_STA_CTRL_OP_PARAM_PRES, _capinfo, _value)
#define GET_DOT11BE_ML_RECONFIG_PER_STA_CTRL_OP_PARAM_PRES(_capinfo) \
	GET_CAP_BITS(DOT11BE_ML_RECONFIG_PER_STA_CTRL_OP_PARAM_PRES, _capinfo)

/*
 * EHT TID-To-Link Mapping element
 *   Element ID:				1 octet
 *   Length:					1 octet
 *   Element ID Ext:			1 octet
 *   TID-To-Link Mapping Ctrl:	2 octets
 *   Link Mapping TID 0:		2 octets
 *   Link Mapping TID 1:		2 octets
 *   ...
 *   Link Mapping TID 7:		2 octets
 */

/*
 * TID-To-Link Control field
 *   Direction:							[1:0]
 *   Default Link Mapping:				[2]
 *   Reserved:							[7:3]
 *   Link Mapping Presence Indicator:	[15:8]
 */
#define MAX_TID_MAPPING_NUM		8

enum {
	TID2LNK_MAP_CTRL_DIR_UL = 0,
	TID2LNK_MAP_CTRL_DIR_DL = 1,
	TID2LNK_MAP_CTRL_DIR_BI = 2
};

#define DOT11BE_TID2LNK_MAP_CTRL_DIR_SHIFT 0
#define DOT11BE_TID2LNK_MAP_CTRL_DIR_BITS 2
#define DOT11BE_TID2LNK_MAP_CTRL_DIR_MASK \
	CAP_BITS_MASK(DOT11BE_TID2LNK_MAP_CTRL_DIR)

#define DOT11BE_TID2LNK_MAP_CTRL_DEFAULT_LNK_MAP_SHIFT 2
#define DOT11BE_TID2LNK_MAP_CTRL_DEFAULT_LNK_MAP_BITS 1
#define DOT11BE_TID2LNK_MAP_CTRL_DEFAULT_LNK_MAP_MASK \
	CAP_BITS_MASK(DOT11BE_TID2LNK_MAP_CTRL_DEFAULT_LNK_MAP)

#define DOT11BE_TID2LNK_MAP_CTRL_LNK_MAP_PRES_SHIFT 8
#define DOT11BE_TID2LNK_MAP_CTRL_LNK_MAP_PRES_BITS 8
#define DOT11BE_TID2LNK_MAP_CTRL_LNK_MAP_PRES_MASK \
	CAP_BITS_MASK(DOT11BE_TID2LNK_MAP_CTRL_LNK_MAP_PRES)

#define SET_DOT11BE_TID2LNK_MAP_CTRL_DIR(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_TID2LNK_MAP_CTRL_DIR, _capinfo, _value)
#define GET_DOT11BE_TID2LNK_MAP_CTRL_DIR(_capinfo) \
	GET_CAP_BITS(DOT11BE_TID2LNK_MAP_CTRL_DIR, _capinfo)

#define SET_DOT11BE_TID2LNK_MAP_CTRL_DEFAULT_LNK_MAP(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_TID2LNK_MAP_CTRL_DEFAULT_LNK_MAP, _capinfo, _value)
#define GET_DOT11BE_TID2LNK_MAP_CTRL_DEFAULT_LNK_MAP(_capinfo) \
	GET_CAP_BITS(DOT11BE_TID2LNK_MAP_CTRL_DEFAULT_LNK_MAP, _capinfo)

#define SET_DOT11BE_TID2LNK_MAP_CTRL_LNK_MAP_PRES(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_TID2LNK_MAP_CTRL_LNK_MAP_PRES, _capinfo, _value)
#define GET_DOT11BE_TID2LNK_MAP_CTRL_LNK_MAP_PRES(_capinfo) \
	GET_CAP_BITS(DOT11BE_TID2LNK_MAP_CTRL_LNK_MAP_PRES, _capinfo)


/*
 * Reduced Neighbor Report element (B0-B15)
 * TBTT Information field - MLD Parameters
 */
#define TBTT_INFO_MLD_PARAM_MLD_ID_SHIFT 0
#define TBTT_INFO_MLD_PARAM_MLD_ID_BITS 8
#define TBTT_INFO_MLD_PARAM_MLD_ID_MASK \
	CAP_BITS_MASK(TBTT_INFO_MLD_PARAM_MLD_ID)

#define TBTT_INFO_MLD_PARAM_LINK_ID_SHIFT 8
#define TBTT_INFO_MLD_PARAM_LINK_ID_BITS 4
#define TBTT_INFO_MLD_PARAM_LINK_ID_MASK \
	CAP_BITS_MASK(TBTT_INFO_MLD_PARAM_LINK_ID)

#define TBTT_INFO_MLD_PARAM_BSS_CHG_CNT_SHIFT 12
#define TBTT_INFO_MLD_PARAM_BSS_CHG_CNT_BITS 8
#define TBTT_INFO_MLD_PARAM_BSS_CHG_CNT_MASK \
	CAP_BITS_MASK(TBTT_INFO_MLD_PARAM_BSS_CHG_CNT)

#define TBTT_INFO_MLD_PARAM_DLI_SHIFT 21
#define TBTT_INFO_MLD_PARAM_DLI_BITS 1
#define TBTT_INFO_MLD_PARAM_DLI_MASK \
	CAP_BITS_MASK(TBTT_INFO_MLD_PARAM_DLI)

#define SET_TBTT_INFO_MLD_PARAM_MLD_ID(_capinfo, _value) \
	SET_CAP_BITS(TBTT_INFO_MLD_PARAM_MLD_ID, _capinfo, _value)
#define GET_TBTT_INFO_MLD_PARAM_MLD_ID(_capinfo) \
	GET_CAP_BITS(TBTT_INFO_MLD_PARAM_MLD_ID, _capinfo)

#define SET_TBTT_INFO_MLD_PARAM_LINK_ID(_capinfo, _value) \
	SET_CAP_BITS(TBTT_INFO_MLD_PARAM_LINK_ID, _capinfo, _value)
#define GET_TBTT_INFO_MLD_PARAM_LINK_ID(_capinfo) \
	GET_CAP_BITS(TBTT_INFO_MLD_PARAM_LINK_ID, _capinfo)

#define SET_TBTT_INFO_MLD_PARAM_BSS_CHG_CNT(_capinfo, _value) \
	SET_CAP_BITS(TBTT_INFO_MLD_PARAM_BSS_CHG_CNT, _capinfo, _value)
#define GET_TBTT_INFO_MLD_PARAM_BSS_CHG_CNT(_capinfo) \
	GET_CAP_BITS(TBTT_INFO_MLD_PARAM_BSS_CHG_CNT, _capinfo)

#define SET_TBTT_INFO_MLD_PARAM_DLI(_capinfo, _value) \
	SET_CAP_BITS(TBTT_INFO_MLD_PARAM_DLI, _capinfo, _value)

/*
 * EML Operating Mode Notification frame
 * EML Control field
 */
#define DOT11BE_EML_CTRL_EMLSR_MODE_SHIFT 0
#define DOT11BE_EML_CTRL_EMLSR_MODE_BITS 1
#define DOT11BE_EML_CTRL_EMLSR_MODE_MASK \
	CAP_BITS_MASK(DOT11BE_EML_CTRL_EMLSR_MODE)

#define DOT11BE_EML_CTRL_EMLMR_MODE_SHIFT 1
#define DOT11BE_EML_CTRL_EMLMR_MODE_BITS 1
#define DOT11BE_EML_CTRL_EMLMR_MODE_MASK \
	CAP_BITS_MASK(DOT11BE_EML_CTRL_EMLMR_MODE)

#define DOT11BE_EML_CTRL_EMLSR_PARAM_UPD_CTRL_SHIFT 2
#define DOT11BE_EML_CTRL_EMLSR_PARAM_UPD_CTRL_BITS 1
#define DOT11BE_EML_CTRL_EMLSR_PARAM_UPD_CTRL_MASK \
	CAP_BITS_MASK(DOT11BE_EML_CTRL_EMLSR_PARAM_UPD_CTRL)

#define DOT11BE_EML_CTRL_EMLSR_LINK_BMAP_SHIFT 8
#define DOT11BE_EML_CTRL_EMLSR_LINK_BMAP_BITS 16
#define DOT11BE_EML_CTRL_EMLSR_LINK_BMAP_MASK \
	CAP_BITS_MASK(DOT11BE_EML_CTRL_EMLSR_LINK_BMAP)

#define SET_DOT11BE_EML_CTRL_EMLSR_MODE(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_EML_CTRL_EMLSR_MODE, _capinfo, _value)
#define GET_DOT11BE_EML_CTRL_EMLSR_MODE(_capinfo) \
	GET_CAP_BITS(DOT11BE_EML_CTRL_EMLSR_MODE, _capinfo)

#define SET_DOT11BE_EML_CTRL_EMLMR_MODE(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_EML_CTRL_EMLMR_MODE, _capinfo, _value)
#define GET_DOT11BE_EML_CTRL_EMLMR_MODE(_capinfo) \
	GET_CAP_BITS(DOT11BE_EML_CTRL_EMLMR_MODE, _capinfo)

#define SET_DOT11BE_EML_CTRL_EMLSR_PARAM_UPD_CTRL(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_EML_CTRL_EMLSR_PARAM_UPD_CTRL, _capinfo, _value)
#define GET_DOT11BE_EML_CTRL_EMLSR_PARAM_UPD_CTRL(_capinfo) \
	GET_CAP_BITS(DOT11BE_EML_CTRL_EMLSR_PARAM_UPD_CTRL, _capinfo)

#define SET_DOT11BE_EML_CTRL_EMLSR_LINK_BMAP(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_EML_CTRL_EMLSR_LINK_BMAP, _capinfo, _value)
#define GET_DOT11BE_EML_CTRL_EMLSR_LINK_BMAP(_capinfo) \
	GET_CAP_BITS(DOT11BE_EML_CTRL_EMLSR_LINK_BMAP, _capinfo)

/*
 * P802.11be_D1.3
 * Multi link traffic IE
 */
#define DOT11BE_MLT_CTRL_BITMAP_SIZE_SHIFT 0
#define DOT11BE_MLT_CTRL_BITMAP_SIZE_BITS 4
#define DOT11BE_MLT_CTRL_BITMAP_SIZE_MASK \
	CAP_BITS_MASK(DOT11BE_MLT_CTRL_BITMAP_SIZE)
#define DOT11BE_MLT_CTRL_AID_OFFSET_SHIFT 4
#define DOT11BE_MLT_CTRL_AID_OFFSET_BITS 11
#define DOT11BE_MLT_CTRL_AID_OFFSET_MASK \
	CAP_BITS_MASK(DOT11BE_MLT_CTRL_AID_OFFSET)

#define SET_DOT11BE_MLT_CTRL_BITMAP_SIZE(_ctrl, _value) \
	SET_CAP_BITS(DOT11BE_MLT_CTRL_BITMAP_SIZE, _ctrl, _value)
#define GET_DOT11BE_MLT_CTRL_BITMAP_SIZE(_ctrl) \
	GET_CAP_BITS(DOT11BE_MLT_CTRL_BITMAP_SIZE, _ctrl)
#define SET_DOT11BE_MLT_CTRL_AID_OFFSET(_ctrl, _value) \
	SET_CAP_BITS(DOT11BE_MLT_CTRL_AID_OFFSET, _ctrl, _value)
#define GET_DOT11BE_MLT_CTRL_AID_OFFSET(_ctrl) \
	GET_CAP_BITS(DOT11BE_MLT_CTRL_AID_OFFSET, _ctrl)

/* EHT MAC Capabilities Information field */
/*
 * Indicates support for NSEP priority access. (BIT0)
 */
#define DOT11BE_MAC_CAP_NSEP_PRI_ACCESS_SHIFT 0
#define DOT11BE_MAC_CAP_NSEP_PRI_ACCESS_MASK \
	BIT(DOT11BE_MAC_CAP_NSEP_PRI_ACCESS_SHIFT)
#define SET_DOT11BE_MAC_CAP_NSEP_PRI_ACCESS(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_MAC_CAP_NSEP_PRI_ACCESS, _capinfo, _value)
#define GET_DOT11BE_MAC_CAP_NSEP_PRI_ACCESS(_capinfo) \
	GET_CAP_BITS(DOT11BE_MAC_CAP_NSEP_PRI_ACCESS, _capinfo)

/*
 * Indicates support for receiving a frame with an EHT OM Control subfield. (BIT1)
 */
#define DOT11BE_MAC_CAP_OM_CTRL_SHIFT 1
#define DOT11BE_MAC_CAP_OM_CTRL_MASK \
	BIT(DOT11BE_MAC_CAP_OM_CTRL_SHIFT)
#define SET_DOT11BE_MAC_CAP_OM_CTRL(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_MAC_CAP_OM_CTRL, _capinfo, _value)
#define GET_DOT11BE_MAC_CAP_OM_CTRL(_capinfo) \
	GET_CAP_BITS(DOT11BE_MAC_CAP_OM_CTRL, _capinfo)

/*
 * Indicates support for transmitting or responding to an MU-RTS TXS Trigger
 * frame with Triggered TXOP Sharing Mode field equal to 1 that does not solicit TB PPDU. (BIT2)
 */
#define DOT11BE_MAC_CAP_TXOP_SHARING_MODE1_SHIFT 2
#define DOT11BE_MAC_CAP_TXOP_SHARING_MODE1_MASK \
	BIT(DOT11BE_MAC_CAP_TXOP_SHARING_MODE1_SHIFT)
#define SET_DOT11BE_MAC_CAP_TXOP_SHARING_MODE1(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_MAC_CAP_TXOP_SHARING_MODE1, _capinfo, _value)
#define GET_DOT11BE_MAC_CAP_TXOP_SHARING_MODE1(_capinfo) \
	GET_CAP_BITS(DOT11BE_MAC_CAP_TXOP_SHARING_MODE1, _capinfo)

/*
 * Indicates support for transmitting or responding to an MU-RTS TXS Trigger
 * frame with Triggered TXOP Sharing Mode field equal to 2 that does not solicit TB PPDU. (BIT3)
 */
#define DOT11BE_MAC_CAP_TXOP_SHARING_MODE2_SHIFT 3
#define DOT11BE_MAC_CAP_TXOP_SHARING_MODE2_MASK \
	BIT(DOT11BE_MAC_CAP_TXOP_SHARING_MODE2_SHIFT)
#define SET_DOT11BE_MAC_CAP_TXOP_SHARING_MODE2(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_MAC_CAP_TXOP_SHARING_MODE2, _capinfo, _value)
#define GET_DOT11BE_MAC_CAP_TXOP_SHARING_MODE2(_capinfo) \
	GET_CAP_BITS(DOT11BE_MAC_CAP_TXOP_SHARING_MODE2, _capinfo)

/*
 * Indicates support for the restricted TWT operation. (BIT4)
 */
#define DOT11BE_MAC_CAP_RESTRICTED_TWT_SHIFT 4
#define DOT11BE_MAC_CAP_RESTRICTED_TWT_MASK \
	BIT(DOT11BE_MAC_CAP_RESTRICTED_TWT_SHIFT)
#define SET_DOT11BE_MAC_CAP_RESTRICTED_TWT(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_MAC_CAP_RESTRICTED_TWT, _capinfo, _value)
#define GET_DOT11BE_MAC_CAP_RESTRICTED_TWT(_capinfo) \
	GET_CAP_BITS(DOT11BE_MAC_CAP_RESTRICTED_TWT, _capinfo)

/*
 * Indicates support for transmission and reception of
 * SCS Descriptor elements containing a TSPEC subelement. (BIT5)
 */
#define DOT11BE_MAC_CAP_SCS_TRAFFIC_SHIFT 5
#define DOT11BE_MAC_CAP_SCS_TRAFFIC_MASK \
	BIT(DOT11BE_MAC_CAP_SCS_TRAFFIC_SHIFT)
#define SET_DOT11BE_MAC_CAP_SCS_TRAFFIC(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_MAC_CAP_SCS_TRAFFIC, _capinfo, _value)
#define GET_DOT11BE_MAC_CAP_SCS_TRAFFIC(_capinfo) \
	GET_CAP_BITS(DOT11BE_MAC_CAP_SCS_TRAFFIC, _capinfo)

/*
 * Indicates the maximum MPDU length that the STA is capable of receiving (BITS6:7)
 * Reserved when transmitted in 5GHz or 6GHz band.
 * Otherwise,
 * set to 0 for 3895 octets.
 * set to 1 for 7991 octets.
 * set to 2 for 11454 octets.
 * The value 3 is reserved.
*/
#define DOT11BE_MAC_CAP_MAX_MPDU_LEN_BITS 2
#define DOT11BE_MAC_CAP_MAX_MPDU_LEN_SHIFT 6
#define DOT11BE_MAC_CAP_MAX_MPDU_LEN_MASK \
	CAP_BITS_MASK(DOT11BE_MAC_CAP_MAX_MPDU_LEN)
#define SET_DOT11BE_MAC_CAP_MAX_MPDU_LEN(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_MAC_CAP_MAX_MPDU_LEN, _capinfo, _value)
#define GET_DOT11BE_MAC_CAP_MAX_MPDU_LEN(_capinfo) \
	GET_CAP_BITS(DOT11BE_MAC_CAP_MAX_MPDU_LEN, _capinfo)

/*
 * P802.11be_D1.2
 */
struct GNU_PACKED eht_mac_capinfo {
	UINT16 mac_capinfo;
};

/* EHT PHY Capabilities Information field */
/* Support Of MCS 15 subfield */
enum eht_mru_set_mcs15 {
	MRU_106TONE_OR_52TONE_W_26TONE = 1,
	MRU_484TONE_W_242TONE_IN_80M = (1 << 1),
	MRU_996TONE_TO_242TONE_IN_160M = (1 << 2),
	MRU_TRIPPLE_996TONE_IN_320M = (1 << 3),
};

/* Common Nominal Packet Padding */
enum eht_common_nominal_padd_us {
	COMMON_NOMINAL_PAD_0_US,
	COMMON_NOMINAL_PAD_8_US,
	COMMON_NOMINAL_PAD_16_US,
	COMMON_NOMINAL_PAD_20_US,
};

/* Maximum Number Of Supported EHT-LTFs */
enum eht_max_ltf {
	MAX_EHT_LTF_NUM_4,
	MAX_EHT_LTF_NUM_8,
};
enum eht_nss_mcs_bw {
	EHT_NSS_MCS_20,
	EHT_NSS_MCS_80,
	EHT_NSS_MCS_160,
	EHT_NSS_MCS_320,
	EHT_MCS_NSS_BW_NUM
};
enum eht_nss_mcs_len {
	EHT_NSS_MCS_20M_TO_80M = 3,
	EHT_NSS_MCS_20M_ONLY = 4,
	EHT_NSS_MCS_80M_TO_160M = 6,
	EHT_NSS_MCS_160M_TO_320M = 9,
};
enum {
	BE_MCS_0,
	BE_MCS_1,
	BE_MCS_2,
	BE_MCS_3,
	BE_MCS_4,
	BE_MCS_5,
	BE_MCS_6,
	BE_MCS_7,
	BE_MCS_8,
	BE_MCS_9,
	BE_MCS_10,
	BE_MCS_11,
	BE_MCS_12,
	BE_MCS_13,
	BE_MCS_MAX = BE_MCS_13,
};
struct GNU_PACKED eht_nss_mcs {
	uint8_t mcs0_7;	/*for 20 only*/
	uint8_t mcs8_9; /*for 20 only*/
	uint8_t mcs0_9;
	uint8_t mcs10_11;
	uint8_t mcs12_13;
};
struct GNU_PACKED eht_txrx_mcs_nss_20 {
	uint8_t max_tx_rx_mcs0_7_nss;	/*rx bit 0-3,tx bit 4-7*/
	uint8_t max_tx_rx_mcs8_9_nss;	/*rx bit 08-11,tx bit 12-15*/
	uint8_t max_tx_rx_mcs10_11_nss;	/*rx bit 16-19,tx bit 20-23*/
	uint8_t max_tx_rx_mcs12_13_nss;	/*rx bit 24-27,tx bit 28-31*/
};

struct GNU_PACKED eht_txrx_mcs_nss {
	uint8_t max_tx_rx_mcs0_9_nss;	/*rx bit 0-3,tx bit 4-7*/
	uint8_t max_tx_rx_mcs10_11_nss;	/*rx bit 08-11,tx bit 12-15*/
	uint8_t max_tx_rx_mcs12_13_nss;	/*rx bit 16-19,tx bit 20-23*/
};
struct GNU_PACKED eht_support_mcs_nss {
	struct eht_txrx_mcs_nss_20 eht_txrx_mcs_nss_20_only;
	struct eht_txrx_mcs_nss eht_txrx_mcs_nss[EHT_MCS_NSS_BW_NUM - 1];
};

struct GNU_PACKED eht_cap_info {
	uint8_t tx_stream;
	uint8_t rx_stream;
	uint8_t eht_ch_width;
	uint8_t ccfs0;
	uint8_t ccfs1;
};

#define EHT_NSS_FOR_SPECIAL_MCS_NUM 5
#define EXTRA_EHT_LTF 1

/* max_mcs_nss for 20M-only sta*/
#define DOT11BE_MCS_NSS_SHIFT 4
#define DOT11BE_MCS_NSS_MASK 0xf

/* phy_capinfo_1: bit0..bit31 */
#define DOT11BE_PHY_CAP_320M_6G BIT(1)
#define DOT11BE_PHY_CAP_242_TONE_RU_WT_20M BIT(2)
#define DOT11BE_PHY_CAP_NDP_4X_EHT_LTF_3DOT2US_GI BIT(3)
#define DOT11BE_PHY_CAP_PARTIAL_BW_UL_MU_MIMO BIT(4)
#define DOT11BE_PHY_CAP_SU_BFER BIT(5)
#define DOT11BE_PHY_CAP_SU_BFEE BIT(6)
#define DOT11BE_PHY_CAP_BFEE_SS_LE_EQ_80M_BITS 3
#define DOT11BE_PHY_CAP_BFEE_SS_LE_EQ_80M_SHIFT 7
#define DOT11BE_PHY_CAP_BFEE_SS_LE_EQ_80M_MASK	CAP_BITS_MASK(DOT11BE_PHY_CAP_BFEE_SS_LE_EQ_80M)
#define SET_DOT11BE_PHY_CAP_BFEE_SS_LE_EQ_80M(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_PHY_CAP_BFEE_SS_LE_EQ_80M, _capinfo, _value)
#define GET_DOT11BE_PHY_CAP_BFEE_SS_LE_EQ_80M(_capinfo) \
	GET_CAP_BITS(DOT11BE_PHY_CAP_BFEE_SS_LE_EQ_80M, _capinfo)
#define DOT11BE_PHY_CAP_BFEE_SS_160M_BITS 3
#define DOT11BE_PHY_CAP_BFEE_SS_160M_SHIFT 10
#define DOT11BE_PHY_CAP_BFEE_SS_160M_MASK \
	CAP_BITS_MASK(DOT11BE_PHY_CAP_BFEE_SS_160M)
#define SET_DOT11BE_PHY_CAP_BFEE_SS_160M(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_PHY_CAP_BFEE_SS_160M, _capinfo, _value)
#define GET_DOT11BE_PHY_CAP_BFEE_SS_160M(_capinfo) \
	GET_CAP_BITS(DOT11BE_PHY_CAP_BFEE_SS_160M, _capinfo)
#define DOT11BE_PHY_CAP_BFEE_SS_320M_BITS 3
#define DOT11BE_PHY_CAP_BFEE_SS_320M_SHIFT 13
#define DOT11BE_PHY_CAP_BFEE_SS_320M_MASK \
	CAP_BITS_MASK(DOT11BE_PHY_CAP_BFEE_SS_320M)
#define SET_DOT11BE_PHY_CAP_BFEE_SS_320M(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_PHY_CAP_BFEE_SS_320M, _capinfo, _value)
#define GET_DOT11BE_PHY_CAP_BFEE_SS_320M(_capinfo) \
	GET_CAP_BITS(DOT11BE_PHY_CAP_BFEE_SS_320M, _capinfo)
#define DOT11BE_PHY_CAP_SOUND_DIM_NUM_LE_EQ_80M_BITS 3
#define DOT11BE_PHY_CAP_SOUND_DIM_NUM_LE_EQ_80M_SHIFT 16
#define DOT11BE_PHY_CAP_SOUND_DIM_NUM_LE_EQ_80M_MASK \
	CAP_BITS_MASK(DOT11BE_PHY_CAP_SOUND_DIM_NUM_LE_EQ_80M)
#define SET_DOT11BE_PHY_CAP_SOUND_DIM_NUM_LE_EQ_80M(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_PHY_CAP_SOUND_DIM_NUM_LE_EQ_80M, _capinfo, _value)
#define GET_DOT11BE_PHY_CAP_SOUND_DIM_NUM_LE_EQ_80M(_capinfo) \
	GET_CAP_BITS(DOT11BE_PHY_CAP_SOUND_DIM_NUM_LE_EQ_80M, _capinfo)
#define DOT11BE_PHY_CAP_SOUND_DIM_NUM_160M_BITS 3
#define DOT11BE_PHY_CAP_SOUND_DIM_NUM_160M_SHIFT 19
#define DOT11BE_PHY_CAP_SOUND_DIM_NUM_160M_MASK \
	CAP_BITS_MASK(DOT11BE_PHY_CAP_SOUND_DIM_NUM_160M)
#define SET_DOT11BE_PHY_CAP_SOUND_DIM_NUM_160M(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_PHY_CAP_SOUND_DIM_NUM_160M, _capinfo, _value)
#define GET_DOT11BE_PHY_CAP_SOUND_DIM_NUM_160M(_capinfo) \
	GET_CAP_BITS(DOT11BE_PHY_CAP_SOUND_DIM_NUM_160M, _capinfo)
#define DOT11BE_PHY_CAP_SOUND_DIM_NUM_320M_BITS 3
#define DOT11BE_PHY_CAP_SOUND_DIM_NUM_320M_SHIFT 22
#define DOT11BE_PHY_CAP_SOUND_DIM_NUM_320M_MASK \
	CAP_BITS_MASK(DOT11BE_PHY_CAP_SOUND_DIM_NUM_320M)
#define SET_DOT11BE_PHY_CAP_SOUND_DIM_NUM_320M(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_PHY_CAP_SOUND_DIM_NUM_320M, _capinfo, _value)
#define GET_DOT11BE_PHY_CAP_SOUND_DIM_NUM_320M(_capinfo) \
	GET_CAP_BITS(DOT11BE_PHY_CAP_SOUND_DIM_NUM_320M, _capinfo)
#define DOT11BE_PHY_CAP_NG16_SU_FEEDBACK BIT(25)
#define DOT11BE_PHY_CAP_NG16_MU_FEEDBACK BIT(26)
/* TODO: name and definition do not match, table 9-322ap */

#define DOT11BE_PHY_CAP_CODEBOOK_4_2_SU_FEEDBACK BIT(27)
/* TODO: name and definition do not match, table 9-322ap */
#define DOT11BE_PHY_CAP_CODEBOOK_7_5_SU_FEEDBACK BIT(28)
#define DOT11BE_PHY_CAP_TRIGED_SU_BF_FEEDBACK BIT(29)
#define DOT11BE_PHY_CAP_TRIGED_MU_BF_PARTIAL_BW_FEEDBACK BIT(30)
#define DOT11BE_PHY_CAP_TRIGED_CQI_FEEDBACK BIT(31)

/* phy_capinfo_2: bit32..bit63 */
#define DOT11BE_PHY_CAP_PARTIAL_BW_DL_MU_MIMO BIT(0)
#define DOT11BE_PHY_CAP_PSR_BASED_SR BIT(1)
#define DOT11BE_PHY_CAP_POWER_BOOST_FACTOR BIT(2)
#define DOT11BE_PHY_CAP_EHT_MU_PPDU_4X_EHT_LTF_DOT8US_GI BIT(3)
#define DOT11BE_PHY_CAP_MAX_NC_BITS 4
#define DOT11BE_PHY_CAP_MAX_NC_SHIFT 4
#define DOT11BE_PHY_CAP_MAX_NC_MASK \
	CAP_BITS_MASK(DOT11BE_PHY_CAP_MAX_NC)
#define SET_DOT11BE_PHY_CAP_MAX_NC(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_PHY_CAP_MAX_NC, _capinfo, _value)
#define GET_DOT11BE_PHY_CAP_MAX_NC(_capinfo) \
	GET_CAP_BITS(DOT11BE_PHY_CAP_MAX_NC, _capinfo)
#define DOT11BE_PHY_CAP_NON_TRIGED_CQI_FEEDBACK BIT(8)
#define DOT11BE_PHY_CAP_TX_1024QAM_4096QAM_LE_242_TONE_RU BIT(9)
#define DOT11BE_PHY_CAP_RX_1024QAM_4096QAM_LE_242_TONE_RU BIT(10)
#define DOT11BE_PHY_CAP_PPE_THRLD_PRESENT BIT(11)
#define DOT11BE_PHY_CAP_COMMON_NOMINAL_PKT_PAD_BITS 2
#define DOT11BE_PHY_CAP_COMMON_NOMINAL_PKT_PAD_SHIFT 12
#define DOT11BE_PHY_CAP_COMMON_NOMINAL_PKT_PAD_MASK \
	CAP_BITS_MASK(DOT11BE_PHY_CAP_COMMON_NOMINAL_PKT_PAD)
#define SET_DOT11BE_PHY_CAP_COMMON_NOMINAL_PKT_PAD(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_PHY_CAP_COMMON_NOMINAL_PKT_PAD, _capinfo, _value)
#define GET_DOT11BE_PHY_CAP_COMMON_NOMINAL_PKT_PAD(_capinfo) \
	GET_CAP_BITS(DOT11BE_PHY_CAP_COMMON_NOMINAL_PKT_PAD, _capinfo)
//#define DOT11BE_PHY_CAP_EXTRA_MAX_EHT_LTF_NUM_SU BIT(13)
#define DOT11BE_PHY_CAP_MAX_EHT_LTF_NUM_BITS 5
#define DOT11BE_PHY_CAP_MAX_EHT_LTF_NUM_SHIFT 14
#define DOT11BE_PHY_CAP_MAX_EHT_LTF_NUM_MASK \
	CAP_BITS_MASK(DOT11BE_PHY_CAP_MAX_EHT_LTF_NUM)
#define SET_DOT11BE_PHY_CAP_MAX_EHT_LTF_NUM(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_PHY_CAP_MAX_EHT_LTF_NUM, _capinfo, _value)
#define GET_DOT11BE_PHY_CAP_MAX_EHT_LTF_NUM(_capinfo) \
	GET_CAP_BITS(DOT11BE_PHY_CAP_MAX_EHT_LTF_NUM, _capinfo)
#define DOT11BE_PHY_CAP_MCS_15_BITS 4
#define DOT11BE_PHY_CAP_MCS_15_SHIFT 19
#define DOT11BE_PHY_CAP_MCS_15_MASK \
	CAP_BITS_MASK(DOT11BE_PHY_CAP_MCS_15)
#define SET_DOT11BE_PHY_CAP_MCS_15(_capinfo, _value) \
	SET_CAP_BITS(DOT11BE_PHY_CAP_MCS_15, _capinfo, _value)
#define GET_DOT11BE_PHY_CAP_MCS_15(_capinfo) \
	GET_CAP_BITS(DOT11BE_PHY_CAP_MCS_15, _capinfo)
#define DOT11BE_PHY_CAP_EHT_DUP_6G BIT(23)
#define DOT11BE_PHY_CAP_20M_RX_NDP_W_WIDER_BW BIT(24)
#define DOT11BE_PHY_CAP_NON_OFDMA_UL_MU_MIMO_LE_EQ_BW80 BIT(25)
#define DOT11BE_PHY_CAP_NON_OFDMA_UL_MU_MIMO_BW160 BIT(26)
#define DOT11BE_PHY_CAP_NON_OFDMA_UL_MU_MIMO_BW320 BIT(27)
#define DOT11BE_PHY_CAP_MU_BFER_LE_EQ_80M BIT(28)
#define DOT11BE_PHY_CAP_MU_BFER_160M BIT(29)
#define DOT11BE_PHY_CAP_MU_BFER_320M BIT(30)
#define DOT11BE_PHY_CAP_TB_SND_FEEDBACK_RATE_LIMIT BIT(31)

/* phy_capinfo_3: bit64..bit95 */
#define DOT11BE_PHY_CAP_RX_1024QAM_I_WIDER_BW_DL_OFDMA BIT(0)
#define DOT11BE_PHY_CAP_RX_4096QAM_I_WIDER_BW_DL_OFDMA BIT(1)

#define DOT11BE_MAX_STREAM 16

struct GNU_PACKED eht_phy_capinfo {
	UINT32 phy_capinfo_1;
	UINT32 phy_capinfo_2;
	UINT8  phy_capinfo_3;
};

struct GNU_PACKED eht_cap_ie {
	struct eht_mac_capinfo mac_cap;
	struct eht_phy_capinfo phy_cap;
	/* Supported EHT-MCS And NSS Set */
	/* EHT PPE Thresholds (Optional) */
};

enum eht_op_ch_bw {
	EHT_OP_CH_BW20 = 0,
	EHT_OP_CH_BW40 = 1,
	EHT_OP_CH_BW80 = 2,
	EHT_OP_CH_BW160 = 3,
	EHT_OP_CH_BW320 = 4,
	EHT_OP_CH_BWMAX
};

/* Draft P802.11be_D1.5
 * EHT Operation element format:
 *     Element ID (1B)
 *     Length (1B)
 *     Element ID Extension (1B)
 *     EHT Operation Parameters (1B)
 *     EHT Operation Information (0B or 3B or 5B)
 *
 * EHT Operation Parameters: 1B
 *     B0 - EHT Operation Information Present
 *     B1 - Disabled Subchannel Bitmap Present
 *     B2~B7 - Reserved
 *
 * Basic EHT-MCS And Nss Set: 4B
 *
 * EHT Operation Information:
 *     Control (1B)
 *     CCFS0 (1B) -
 *         For 20, 40 or 80MHz BSS band width, indicates the channel center frequency index.
 *         For 160MHz BSS bandwidth, indicates the channel center frequency index of the primary 80MHz channel.
 *         For 320MHz BSS bandwidth, indicates the channel center frequency index of the primary 160MHz channel.
 *     CCFS1 (1B) -
 *         For a 20, 40 or 80MHz BSS bandwidth, his subfield is set to 0.
 *         For a 160MHz BSS bandwidth, indicates the channel center frequency index of the 160MHz channel on which the EHT BSS operates.
 *         For a 320MHz BSS bandwidth, indicates the channel center frequency index of the 320MHz channel on which the EHT BSS operates.
 *     Disabled Subchannel Bitmap (0B or 2B)
 */

#define EHT_OP_IE_BASIC_LEN 5 /* EHT Operation Parameters + Basic EHT-MCS And Nss Set */
#define EHT_OP_IE_MAX_LEN 10 /*the maxmum length of EHT Operation Parameters*/
#define ML_IE_MINIMUM_LEN 3 /*Element ID Extension + Multi link control*/

/* eht op parameters */
#define DOT11BE_OP_PARAM_HAS_OP_INFO_SHIFT 0
#define DOT11BE_OP_PARAM_HAS_OP_INFO_MASK \
	BIT(DOT11BE_OP_PARAM_HAS_OP_INFO_SHIFT)
#define SET_DOT11BE_OP_PARAM_HAS_OP_INFO(_op_param, _value) \
	SET_CAP_BITS(DOT11BE_OP_PARAM_HAS_OP_INFO, _op_param, _value)
#define GET_DOT11BE_OP_PARAM_HAS_OP_INFO(_op_param) \
	GET_CAP_BITS(DOT11BE_OP_PARAM_HAS_OP_INFO, _op_param)

#define DOT11BE_OP_PARAM_HAS_DIS_SUB_CH_BITMAP_SHIFT 1
#define DOT11BE_OP_PARAM_HAS_DIS_SUB_CH_BITMAP_MASK \
	BIT(DOT11BE_OP_PARAM_HAS_DIS_SUB_CH_BITMAP_SHIFT)
#define SET_DOT11BE_OP_PARAM_HAS_DIS_SUB_CH_BITMAP(_op_param, _value) \
	SET_CAP_BITS(DOT11BE_OP_PARAM_HAS_DIS_SUB_CH_BITMAP, _op_param, _value)
#define GET_DOT11BE_OP_PARAM_HAS_DIS_SUB_CH_BITMAP(_op_param) \
	GET_CAP_BITS(DOT11BE_OP_PARAM_HAS_DIS_SUB_CH_BITMAP, _op_param)

/* eht op control */
#define DOT11BE_OP_CTRL_CH_BW_BITS 3
#define DOT11BE_OP_CTRL_CH_BW_SHIFT 0
#define DOT11BE_OP_CTRL_CH_BW_MASK \
	CAP_BITS_MASK(DOT11BE_OP_CTRL_CH_BW)
#define SET_DOT11BE_OP_CTRL_CH_BW(_op_ctrl, _value) \
	SET_CAP_BITS(DOT11BE_OP_CTRL_CH_BW, _op_ctrl, _value)
#define GET_DOT11BE_OP_CTRL_CH_BW(_op_ctrl) \
	GET_CAP_BITS(DOT11BE_OP_CTRL_CH_BW, _op_ctrl)

struct GNU_PACKED eht_op_info {
	u8 control;
	u8 ccfs0;
	u8 ccfs1;
};

struct GNU_PACKED eht_op_ie {
	u8 op_parameters;
	struct eht_txrx_mcs_nss_20 basic_eht_mcs_nss;
	struct eht_op_info op_info;
};

extern void eht_mcs_map_bw20(UINT8 tx_nss, UINT8 rx_nss, UINT8 max_mcs, struct eht_txrx_mcs_nss_20 *eht_mcs_bw20);
extern void eht_mcs_map(UINT8 tx_nss, UINT8 rx_nss, UINT8 max_mcs, struct eht_txrx_mcs_nss *eht_mcs);

/*
 * ADDBA Extension
 */
#define ADDBA_EXT_BUF_SIZE_BITS 3
#define ADDBA_EXT_BUF_SIZE_SHIFT 5
#define ADDBA_EXT_BUF_SIZE_MASK \
	CAP_BITS_MASK(ADDBA_EXT_BUF_SIZE)
#define SET_ADDBA_EXT_BUF_SIZE(_addba_ext, _value) \
	SET_CAP_BITS(ADDBA_EXT_BUF_SIZE, _addba_ext, _value)
#define GET_ADDBA_EXT_BUF_SIZE(_addba_ext) \
	GET_CAP_BITS(ADDBA_EXT_BUF_SIZE, _addba_ext)
#define ADDBA_BUF_SIZE_BITS 10
#define ADDBA_EXT_IE_TOTAL_LEN 3

#define GET_BW320_PRIM160_CENT(prim, cent)\
	((prim > cent) ? (cent + 16) : (cent - 16))

#endif /* _DOT11BE_EHT_H_ */
